# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: # when to trigger a build
  batch: true # means that if there are more changes when build is running, they will be waited for instead of starting a parallel build
  branches:
    include:
      - master # trigger only on changes to master branch
      - develop
pr:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  project: 'SmartHub/SmartHub.Api/SmartHub.Api.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  linx64: 'linux-x64'

stages:
  - stage: RestoreBuild
    jobs:
      - job: Restore_and_Build
        steps:
        # - task: NuGetToolInstaller@1
        #   displayName: Nuget Install
        # - task: NuGetCommand@2
        #   displayName: Restore
        #   inputs:
        #     restoreSolution: '$(solution)'

        - task: SonarCloudPrepare@1
          inputs:
            SonarCloud: 'SmartHub-SonarCloud'
            organization: 'smarthub-io'
            scannerMode: 'MSBuild'
            projectKey: 'smarthub-io'
            projectName: 'SmartHub'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'restore'
            projects: '$(project)'
            feedsToUse: 'select'

        - task: DotNetCoreCLI@2
          inputs:
            command: 'build'
            projects: '$(project)'
            arguments: '--configuration $(buildConfiguration) --no-restore'

        # - task: VSBuild@1
        #   displayName: Build
        #   inputs:
        #     solution: '$(solution)'
        #     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        #     platform: '$(buildPlatform)'
        #     configuration: '$(buildConfiguration)'
        # - task: Visual Studio IntelliCode Team Model Training@0
        #   inputs:
        #     branch: 'develop'
        #     intelliCodeServiceEndpoint: 'IntelliCode'
        # - task: VSTest@2
        #   displayName: Test
        #   inputs:
        #     platform: '$(buildPlatform)'
        #     configuration: '$(buildConfiguration)'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'test'
            projects: '$(project)'
            arguments: '--no-restore --verbosity normal'

        - task: SonarCloudAnalyze@1
          displayName: Sonar Analyze
        - task: SonarCloudPublish@1
          displayName: Sonar Publish
          inputs:
            pollingTimeoutSec: '300'
 
  - stage: Publish
    dependsOn: RestoreBuild
    jobs:
      - job: Publish
        strategy:
          matrix:
            linux:
              imageName: 'ubuntu-latest'
        steps:
        - task: DotNetCoreCLI@2
          displayName: Publish
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: true

        - task: PublishBuildArtifacts@1
          displayName: Publish Artifacts
          inputs:
            pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
            artifactName: 'SmartHub_$(imageName)'
